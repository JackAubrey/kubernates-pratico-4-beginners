apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"1"},"creationTimestamp":"2024-05-08T14:26:16Z","generation":3,"labels":{"app":"ngnix"},"name":"ngnix","namespace":"mynamespace","resourceVersion":"61504","uid":"fcdc3ab4-5cd5-4a9f-aae5-b1eab430a07d"},"spec":{"progressDeadlineSeconds":600,"replicas":3,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"ngnix"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"ngnix"}},"spec":{"containers":[{"image":"nginx:1.19.0","imagePullPolicy":"IfNotPresent","name":"nginx","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":30}}},"status":{"availableReplicas":3,"conditions":[{"lastTransitionTime":"2024-05-08T14:26:16Z","lastUpdateTime":"2024-05-08T14:26:17Z","message":"ReplicaSet \"ngnix-cbfdcb56c\" has successfully progressed.","reason":"NewReplicaSetAvailable","status":"True","type":"Progressing"},{"lastTransitionTime":"2024-05-08T14:36:32Z","lastUpdateTime":"2024-05-08T14:36:32Z","message":"Deployment has minimum availability.","reason":"MinimumReplicasAvailable","status":"True","type":"Available"}],"observedGeneration":3,"readyReplicas":3,"replicas":3,"updatedReplicas":3}}
  creationTimestamp: "2024-05-08T14:26:16Z"
  generation: 4
  labels:
    app: ngnix
  name: ngnix
  namespace: mynamespace
  resourceVersion: "62555"
  uid: fcdc3ab4-5cd5-4a9f-aae5-b1eab430a07d
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ngnix
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: ngnix
    spec:
      containers:
      - image: nginx:1.19.1
        imagePullPolicy: IfNotPresent
        name: nginx
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30